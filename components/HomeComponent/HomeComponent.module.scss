.homeContent {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  text-align: center;
}
.heading {
  font-size: 36px;
  margin-top: 50px;
}
.textGreen {
  color: #34a853;
}

.loginBtn {
  display: flex;
  align-items: center;
}
.searchBox {
  display: flex;
  flex-direction: column;
  margin-top: 70px;
  margin-bottom: 70px;
}
.searchFields {
  display: flex;
  flex-direction: row;
  height: 80px;
}

.searchContainer {
  margin: 0 auto;
  margin-left: 30px;
}
.searchIcon {
  position: relative;
  float: right;
  /* width: 75px; */
  height: 75px;
  top: -40%;
  left: -15px;
}
.iconSize {
  font-size: 20px !important;
  color: gray;
}
.radioHead {
  width: 100%;
  display: flex;
  justify-content: flex-start;
  flex-direction: column;
}
.radioBtn {
  display: flex;
  justify-content: flex-start;
}

/* radio-button */

.radioButton {
  display: block;
  position: relative;
  padding-left: 40px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 14px;
  font-weight: 400;
  color: #92929e;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.radio {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

/* Hide the browser's default radio button */
.radioButton input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom radio button */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 22px;
  width: 22px;
  background-color: #eee;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.radioButton:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.radioButton input:checked ~ .checkmark {
  background-color: #268dec;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.radioButton:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.radioButton input:checked ~ .checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.radioButton .checkmark:after {
  top: 9px;
  left: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
}
// The .select style is applied to the react select dropdown package, so I had to use the !Important for applying custom css styles
.select {
  width: 380px !important;
  height: 45px !important;
  font-size: 1rem !important;
  margin: 0 auto !important;
  margin-left: 30px !important;
  border-radius: 5px !important;
}
.inputDate {
  // border: 1px solid #c4c4c4;
  height: 45px;
  width: 380px !important;
  border-radius: 5px;
  // background-color: #fff;
  padding: 3px 5px;
  /* width: 190px; */
}
.searchButton {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 50px;
  margin-right: 30px;
}

.text {
  margin-top: 10px;
}

@media screen and (max-width: 500px) {
  .inputDate {
    width: 180px !important;
  }
  .select {
    width: 180px !important;
  }
}
@media screen and (max-width: 768px) {
  .searchFields {
    display: flex;
  }
  .mobileResponsive {
    margin: 0px auto;
  }
  .searchContainer {
    margin-left: 0px;
  }
  .searchIcon {
    left: -10px;
  }
  .mobile {
    margin-top: 50px;
  }
  .dateResponsive {
    display: flex;
    margin: 0px auto;
  }
  .dateMargin {
    margin-right: 40px;
  }

  .inputDate {
    width: 205px !important;
  }

  .select {
    width: 205px !important;
  }
}
